{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4","program":"/Users/leon/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","parity_scale_codec","--edition=2018","/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bitvec\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=92ffc9fa04af828f","-C","extra-filename=-92ffc9fa04af828f","--out-dir","/Users/leon/dev/rust/leon/eth-spv-lib/target/rls/debug/deps","-L","dependency=/Users/leon/dev/rust/leon/eth-spv-lib/target/rls/debug/deps","--extern","arrayvec=/Users/leon/dev/rust/leon/eth-spv-lib/target/rls/debug/deps/libarrayvec-e51aa8a0fed25314.rmeta","--extern","bitvec=/Users/leon/dev/rust/leon/eth-spv-lib/target/rls/debug/deps/libbitvec-9dfadaebd4b4ec8f.rmeta","--extern","byte_slice_cast=/Users/leon/dev/rust/leon/eth-spv-lib/target/rls/debug/deps/libbyte_slice_cast-aa9ae59c5cc2a8c3.rmeta","--extern","serde=/Users/leon/dev/rust/leon/eth-spv-lib/target/rls/debug/deps/libserde-3101aca3876c0ccc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/leon/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/leon/dev/rust/leon/eth-spv-lib/target/rls/debug/deps/libparity_scale_codec-92ffc9fa04af828f.rmeta"},"prelude":{"crate_id":{"name":"parity_scale_codec","disambiguator":[1871643894943308089,7748555924029533687]},"crate_root":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src","external_crates":[{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9505258173972014140,1687564053001788342]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","num":2,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14698847031314625437,491468730102695142]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13330479813603739683,6803795581109914288]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18059772732427324572,13387991576644447952]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10236583916794409636,10240650400930061727]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11381542376919589428,1099759283771964623]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[362513579181741490,3555756610499304386]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726896196391708128,17121846613634101866]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15657039231647705578,5960932578145670068]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7592225372802278695,9789656229435184476]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","num":15,"id":{"name":"arrayvec","disambiguator":[3183921235153321908,9914547393301140359]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","num":16,"id":{"name":"byte_slice_cast","disambiguator":[4122250153348870180,16495372445327080520]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","num":17,"id":{"name":"serde","disambiguator":[18082573058221637362,668080170454435543]}},{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","num":18,"id":{"name":"serde_derive","disambiguator":[17607530673457562254,9386950751278826108]}}],"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":603,"byte_end":10131,"line_start":15,"line_end":288,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":36},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9272,"byte_end":9277,"line_start":254,"line_end":254,"column_start":15,"column_end":20},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":5,"index":4168},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9293,"byte_end":9296,"line_start":255,"line_end":255,"column_start":15,"column_end":18},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":5,"index":3541},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9312,"byte_end":9318,"line_start":256,"line_end":256,"column_start":15,"column_end":21},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":5,"index":311},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9334,"byte_end":9340,"line_start":257,"line_end":257,"column_start":15,"column_end":21},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":1,"index":575},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9356,"byte_end":9367,"line_start":258,"line_end":258,"column_start":15,"column_end":26},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":1,"index":4428},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9383,"byte_end":9387,"line_start":259,"line_end":259,"column_start":15,"column_end":19},"alias_span":null,"name":"sync","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":5,"index":2969},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9403,"byte_end":9405,"line_start":260,"line_end":260,"column_start":15,"column_end":17},"alias_span":null,"name":"rc","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9648,"byte_end":9653,"line_start":277,"line_end":277,"column_start":2,"column_end":7},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9655,"byte_end":9661,"line_start":277,"line_end":277,"column_start":9,"column_end":15},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":743},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9663,"byte_end":9668,"line_start":277,"line_end":277,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9670,"byte_end":9676,"line_start":277,"line_end":277,"column_start":24,"column_end":30},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":107},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9678,"byte_end":9684,"line_start":277,"line_end":277,"column_start":32,"column_end":38},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9686,"byte_end":9691,"line_start":277,"line_end":277,"column_start":40,"column_end":45},"alias_span":null,"name":"Codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9693,"byte_end":9704,"line_start":277,"line_end":277,"column_start":47,"column_end":58},"alias_span":null,"name":"EncodeAsRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9706,"byte_end":9723,"line_start":277,"line_end":277,"column_start":60,"column_end":77},"alias_span":null,"name":"WrapperTypeEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9726,"byte_end":9736,"line_start":278,"line_end":278,"column_start":2,"column_end":12},"alias_span":null,"name":"OptionBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9738,"byte_end":9750,"line_start":278,"line_end":278,"column_start":14,"column_end":26},"alias_span":null,"name":"DecodeLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9752,"byte_end":9761,"line_start":278,"line_end":278,"column_start":28,"column_end":37},"alias_span":null,"name":"FullCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9763,"byte_end":9773,"line_start":278,"line_end":278,"column_start":39,"column_end":49},"alias_span":null,"name":"FullEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9823,"byte_end":9831,"line_start":281,"line_end":281,"column_start":22,"column_end":30},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6346},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9857,"byte_end":9864,"line_start":282,"line_end":282,"column_start":25,"column_end":32},"alias_span":null,"name":"Compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9866,"byte_end":9876,"line_start":282,"line_end":282,"column_start":34,"column_end":44},"alias_span":null,"name":"HasCompact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9878,"byte_end":9887,"line_start":282,"line_end":282,"column_start":46,"column_end":55},"alias_span":null,"name":"CompactAs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9889,"byte_end":9899,"line_start":282,"line_end":282,"column_start":57,"column_end":67},"alias_span":null,"name":"CompactLen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9924,"byte_end":9930,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"alias_span":null,"name":"Joiner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":590},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9956,"byte_end":9964,"line_start":284,"line_end":284,"column_start":25,"column_end":33},"alias_span":null,"name":"KeyedVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9992,"byte_end":10001,"line_start":285,"line_end":285,"column_start":27,"column_end":36},"alias_span":null,"name":"DecodeAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":10030,"byte_end":10041,"line_start":286,"line_end":286,"column_start":28,"column_end":39},"alias_span":null,"name":"DecodeLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":10072,"byte_end":10084,"line_start":287,"line_end":287,"column_start":30,"column_end":42},"alias_span":null,"name":"EncodeAppend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":684},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":10114,"byte_end":10124,"line_start":288,"line_end":288,"column_start":29,"column_end":39},"alias_span":null,"name":"EncodeLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":10126,"byte_end":10129,"line_start":288,"line_end":288,"column_start":41,"column_end":44},"alias_span":null,"name":"Ref","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":603,"byte_end":10131,"line_start":15,"line_end":288,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11},{"krate":0,"index":379},{"krate":0,"index":574},{"krate":0,"index":586},{"krate":0,"index":596},{"krate":0,"index":606},{"krate":0,"index":633},{"krate":0,"index":682},{"krate":0,"index":716},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"decl_id":null,"docs":" # Parity SCALE Codec","sig":null,"attributes":[{"value":"! # Parity SCALE Codec","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":603,"byte_end":627,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":628,"byte_end":631,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Rust implementation of the SCALE (Simple Concatenated Aggregate Little-Endian) data format","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":632,"byte_end":726,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"! for types used in the Parity Substrate framework.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":727,"byte_end":780,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":781,"byte_end":784,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! SCALE is a light-weight format which allows encoding (and decoding) which makes it highly","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":785,"byte_end":878,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"! suitable for resource-constrained execution environments like blockchain runtimes and low-power,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":879,"byte_end":979,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"! low-memory devices.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":980,"byte_end":1003,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1004,"byte_end":1007,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! It is important to note that the encoding context (knowledge of how the types and data structures look)","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1008,"byte_end":1115,"line_start":24,"line_end":24,"column_start":1,"column_end":108}},{"value":"! needs to be known separately at both encoding and decoding ends.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1116,"byte_end":1184,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"! The encoded data does not include this contextual information.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1185,"byte_end":1251,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! To get a better understanding of how the encoding is done for different types,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1256,"byte_end":1338,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"! take a look at the","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1339,"byte_end":1361,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"! [low-level data formats overview page at the Substrate docs site](https://substrate.dev/docs/en/overview/low-level-data-format).","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1362,"byte_end":1494,"line_start":30,"line_end":30,"column_start":1,"column_end":133}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1495,"byte_end":1498,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ## Implementation","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1499,"byte_end":1520,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1521,"byte_end":1524,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! The codec is implemented using the following traits:","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1525,"byte_end":1581,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1582,"byte_end":1585,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ### Encode","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1586,"byte_end":1600,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1601,"byte_end":1604,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! The `Encode` trait is used for encoding of data into the SCALE format. The `Encode` trait contains the following functions:","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1605,"byte_end":1732,"line_start":38,"line_end":38,"column_start":1,"column_end":128}},{"value":"! * `size_hint(&self) -> usize`: Gets the capacity (in bytes) required for the encoded data.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1734,"byte_end":1828,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"! This is to avoid double-allocation of memory needed for the encoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1829,"byte_end":1902,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"! It can be an estimate and does not need to be an exact number.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1903,"byte_end":1969,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"! If the size is not known, even no good maximum, then we can skip this function from the trait implementation.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":1970,"byte_end":2083,"line_start":43,"line_end":43,"column_start":1,"column_end":114}},{"value":"! This is required to be a cheap operation, so should not involve iterations etc.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2084,"byte_end":2167,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"! * `encode_to<T: Output>(&self, dest: &mut T)`: Encodes the value and appends it to a destination buffer.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2168,"byte_end":2276,"line_start":45,"line_end":45,"column_start":1,"column_end":109}},{"value":"! * `encode(&self) -> Vec<u8>`: Encodes the type data and returns a slice.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2277,"byte_end":2353,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"! * `using_encoded<R, F: FnOnce(&[u8]) -> R>(&self, f: F) -> R`: Encodes the type data and executes a closure on the encoded value.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2354,"byte_end":2487,"line_start":47,"line_end":47,"column_start":1,"column_end":134}},{"value":"! Returns the result from the executed closure.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2488,"byte_end":2537,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2538,"byte_end":2541,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! **Note:** Implementations should override `using_encoded` for value types and `encode_to` for allocating types.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2542,"byte_end":2657,"line_start":50,"line_end":50,"column_start":1,"column_end":116}},{"value":"! `size_hint` should be implemented for all types, wherever possible. Wrapper types should override all methods.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2658,"byte_end":2772,"line_start":51,"line_end":51,"column_start":1,"column_end":115}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2773,"byte_end":2776,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ### Decode","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2777,"byte_end":2791,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2792,"byte_end":2795,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! The `Decode` trait is used for deserialization/decoding of encoded data into the respective types.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2796,"byte_end":2898,"line_start":55,"line_end":55,"column_start":1,"column_end":103}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2899,"byte_end":2902,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! * `fn decode<I: Input>(value: &mut I) -> Result<Self, Error>`: Tries to decode the value from SCALE format to the type it is called on.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":2903,"byte_end":3042,"line_start":57,"line_end":57,"column_start":1,"column_end":140}},{"value":"! Returns an `Err` if the decoding fails.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3043,"byte_end":3086,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3087,"byte_end":3090,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ### CompactAs","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3091,"byte_end":3108,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3109,"byte_end":3112,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! The `CompactAs` trait is used for wrapping custom types/structs as compact types, which makes them even more space/memory efficient.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3113,"byte_end":3249,"line_start":62,"line_end":62,"column_start":1,"column_end":137}},{"value":"! The compact encoding is described [here](https://substrate.dev/docs/en/overview/low-level-data-format#compact-general-integers).","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3250,"byte_end":3382,"line_start":63,"line_end":63,"column_start":1,"column_end":133}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3383,"byte_end":3386,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! * `encode_as(&self) -> &Self::As`: Encodes the type (self) as a compact type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3387,"byte_end":3468,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"! The type `As` is defined in the same trait and its implementation should be compact encode-able.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3469,"byte_end":3569,"line_start":66,"line_end":66,"column_start":1,"column_end":101}},{"value":"! * `decode_from(_: Self::As) -> Self`: Decodes the type (self) from a compact encode-able type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3570,"byte_end":3668,"line_start":67,"line_end":67,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3669,"byte_end":3672,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! ### HasCompact","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3673,"byte_end":3691,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3692,"byte_end":3695,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! The `HasCompact` trait, if implemented, tells that the corresponding type is a compact encode-able type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3696,"byte_end":3804,"line_start":71,"line_end":71,"column_start":1,"column_end":109}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3805,"byte_end":3808,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ### EncodeLike","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3809,"byte_end":3827,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3828,"byte_end":3831,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! The `EncodeLike` trait needs to be implemented for each type manually. When using derive, it is","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3832,"byte_end":3931,"line_start":75,"line_end":75,"column_start":1,"column_end":100}},{"value":"! done automatically for you. Basically the trait gives you the opportunity to accept multiple types","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":3932,"byte_end":4034,"line_start":76,"line_end":76,"column_start":1,"column_end":103}},{"value":"! to a function that all encode to the same representation.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4035,"byte_end":4096,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4097,"byte_end":4100,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! ## Usage Examples","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4101,"byte_end":4122,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4123,"byte_end":4126,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! Following are some examples to demonstrate usage of the codec.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4127,"byte_end":4193,"line_start":81,"line_end":81,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4194,"byte_end":4197,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! ### Simple types","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4198,"byte_end":4218,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4219,"byte_end":4222,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4223,"byte_end":4230,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! # // Import macros if derive feature is not used.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4231,"byte_end":4284,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"! # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4285,"byte_end":4320,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"! # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4321,"byte_end":4375,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4376,"byte_end":4379,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! use parity_scale_codec::{Encode, Decode};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4380,"byte_end":4425,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4426,"byte_end":4429,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4430,"byte_end":4477,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"! enum EnumType {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4478,"byte_end":4497,"line_start":93,"line_end":93,"column_start":1,"column_end":20}},{"value":"! \t#[codec(index = \"15\")]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4498,"byte_end":4525,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"! \tA,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4526,"byte_end":4533,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"! \tB(u32, u64),","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4534,"byte_end":4551,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"! \tC {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4552,"byte_end":4560,"line_start":97,"line_end":97,"column_start":1,"column_end":9}},{"value":"! \t\ta: u32,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4561,"byte_end":4574,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"! \t\tb: u64,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4575,"byte_end":4588,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"! \t},","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4589,"byte_end":4596,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"! }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4597,"byte_end":4602,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4603,"byte_end":4606,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! let a = EnumType::A;","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4607,"byte_end":4631,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"! let b = EnumType::B(1, 2);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4632,"byte_end":4662,"line_start":104,"line_end":104,"column_start":1,"column_end":31}},{"value":"! let c = EnumType::C { a: 1, b: 2 };","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4663,"byte_end":4702,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! a.using_encoded(|ref slice| {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4707,"byte_end":4740,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"!     assert_eq!(slice, &b\"\\x0f\");","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4741,"byte_end":4777,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4778,"byte_end":4785,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4786,"byte_end":4789,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! b.using_encoded(|ref slice| {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4790,"byte_end":4823,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"!     assert_eq!(slice, &b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4824,"byte_end":4888,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"! });","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4889,"byte_end":4896,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4897,"byte_end":4900,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! c.using_encoded(|ref slice| {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4901,"byte_end":4934,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"!     assert_eq!(slice, &b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":4935,"byte_end":4999,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"! });","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5000,"byte_end":5007,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5008,"byte_end":5011,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! let mut da: &[u8] = b\"\\x0f\";","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5012,"byte_end":5044,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"! assert_eq!(EnumType::decode(&mut da).ok(), Some(a));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5045,"byte_end":5101,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5102,"byte_end":5105,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! let mut db: &[u8] = b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5106,"byte_end":5166,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"! assert_eq!(EnumType::decode(&mut db).ok(), Some(b));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5167,"byte_end":5223,"line_start":123,"line_end":123,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5224,"byte_end":5227,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! let mut dc: &[u8] = b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5228,"byte_end":5288,"line_start":125,"line_end":125,"column_start":1,"column_end":61}},{"value":"! assert_eq!(EnumType::decode(&mut dc).ok(), Some(c));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5289,"byte_end":5345,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5346,"byte_end":5349,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! let mut dz: &[u8] = &[0];","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5350,"byte_end":5379,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"! assert_eq!(EnumType::decode(&mut dz).ok(), None);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5380,"byte_end":5433,"line_start":129,"line_end":129,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5434,"byte_end":5437,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! # fn main() { }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5438,"byte_end":5457,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"! ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5458,"byte_end":5465,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5466,"byte_end":5469,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! ### Compact type with HasCompact","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5470,"byte_end":5506,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5507,"byte_end":5510,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5511,"byte_end":5518,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"! # // Import macros if derive feature is not used.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5519,"byte_end":5572,"line_start":137,"line_end":137,"column_start":1,"column_end":54}},{"value":"! # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5573,"byte_end":5608,"line_start":138,"line_end":138,"column_start":1,"column_end":36}},{"value":"! # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5609,"byte_end":5663,"line_start":139,"line_end":139,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5664,"byte_end":5667,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! use parity_scale_codec::{Encode, Decode, Compact, HasCompact};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5668,"byte_end":5734,"line_start":141,"line_end":141,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5735,"byte_end":5738,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5739,"byte_end":5786,"line_start":143,"line_end":143,"column_start":1,"column_end":48}},{"value":"! struct Test1CompactHasCompact<T: HasCompact> {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5787,"byte_end":5837,"line_start":144,"line_end":144,"column_start":1,"column_end":51}},{"value":"!     #[codec(compact)]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5838,"byte_end":5863,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!     bar: T,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5864,"byte_end":5879,"line_start":146,"line_end":146,"column_start":1,"column_end":16}},{"value":"! }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5880,"byte_end":5885,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5886,"byte_end":5889,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5890,"byte_end":5937,"line_start":149,"line_end":149,"column_start":1,"column_end":48}},{"value":"! struct Test1HasCompact<T: HasCompact> {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5938,"byte_end":5981,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"!     #[codec(encoded_as = \"<T as HasCompact>::Type\")]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":5982,"byte_end":6038,"line_start":151,"line_end":151,"column_start":1,"column_end":57}},{"value":"!     bar: T,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6039,"byte_end":6054,"line_start":152,"line_end":152,"column_start":1,"column_end":16}},{"value":"! }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6055,"byte_end":6060,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6061,"byte_end":6064,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! let test_val: (u64, usize) = (0u64, 1usize);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6065,"byte_end":6113,"line_start":155,"line_end":155,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6114,"byte_end":6117,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! let encoded = Test1HasCompact { bar: test_val.0 }.encode();","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6118,"byte_end":6181,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"! assert_eq!(encoded.len(), test_val.1);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6182,"byte_end":6224,"line_start":158,"line_end":158,"column_start":1,"column_end":43}},{"value":"! assert_eq!(<Test1CompactHasCompact<u64>>::decode(&mut &encoded[..]).unwrap().bar, test_val.0);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6225,"byte_end":6323,"line_start":159,"line_end":159,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6324,"byte_end":6327,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! # fn main() { }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6328,"byte_end":6347,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"! ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6348,"byte_end":6355,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"! ### Type with CompactAs","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6356,"byte_end":6383,"line_start":163,"line_end":163,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6384,"byte_end":6387,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6388,"byte_end":6399,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"! # // Import macros if derive feature is not used.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6400,"byte_end":6453,"line_start":166,"line_end":166,"column_start":1,"column_end":54}},{"value":"! # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6454,"byte_end":6489,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"! # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6490,"byte_end":6544,"line_start":168,"line_end":168,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6545,"byte_end":6548,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! use serde_derive::{Serialize, Deserialize};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6549,"byte_end":6596,"line_start":170,"line_end":170,"column_start":1,"column_end":48}},{"value":"! use parity_scale_codec::{Encode, Decode, Compact, HasCompact, CompactAs};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6597,"byte_end":6674,"line_start":171,"line_end":171,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6675,"byte_end":6678,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"! #[cfg_attr(feature = \"std\", derive(Serialize, Deserialize, Debug))]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6679,"byte_end":6750,"line_start":173,"line_end":173,"column_start":1,"column_end":72}},{"value":"! #[derive(PartialEq, Eq, Clone)]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6751,"byte_end":6786,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"! struct StructHasCompact(u32);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6787,"byte_end":6820,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6821,"byte_end":6824,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! impl CompactAs for StructHasCompact {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6825,"byte_end":6866,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"!     type As = u32;","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6867,"byte_end":6889,"line_start":178,"line_end":178,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6890,"byte_end":6893,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"!     fn encode_as(&self) -> &Self::As {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6894,"byte_end":6936,"line_start":180,"line_end":180,"column_start":1,"column_end":43}},{"value":"!         &12","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6937,"byte_end":6952,"line_start":181,"line_end":181,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6953,"byte_end":6962,"line_start":182,"line_end":182,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6963,"byte_end":6966,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"!     fn decode_from(_: Self::As) -> Self {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":6967,"byte_end":7012,"line_start":184,"line_end":184,"column_start":1,"column_end":46}},{"value":"!         StructHasCompact(12)","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7013,"byte_end":7045,"line_start":185,"line_end":185,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7046,"byte_end":7055,"line_start":186,"line_end":186,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7056,"byte_end":7061,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7062,"byte_end":7065,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! impl From<Compact<StructHasCompact>> for StructHasCompact {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7066,"byte_end":7129,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"!     fn from(_: Compact<StructHasCompact>) -> Self {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7130,"byte_end":7185,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"!         StructHasCompact(12)","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7186,"byte_end":7218,"line_start":191,"line_end":191,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7219,"byte_end":7228,"line_start":192,"line_end":192,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7229,"byte_end":7234,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7235,"byte_end":7238,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7239,"byte_end":7286,"line_start":195,"line_end":195,"column_start":1,"column_end":48}},{"value":"! enum TestGenericHasCompact<T> {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7287,"byte_end":7322,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"!     A {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7323,"byte_end":7334,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!         #[codec(compact)] a: T","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7335,"byte_end":7369,"line_start":198,"line_end":198,"column_start":1,"column_end":35}},{"value":"!     },","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7370,"byte_end":7380,"line_start":199,"line_end":199,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7381,"byte_end":7386,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7387,"byte_end":7390,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"! let a = TestGenericHasCompact::A::<StructHasCompact> {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7391,"byte_end":7449,"line_start":202,"line_end":202,"column_start":1,"column_end":59}},{"value":"!     a: StructHasCompact(12325678),","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7450,"byte_end":7488,"line_start":203,"line_end":203,"column_start":1,"column_end":39}},{"value":"! };","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7489,"byte_end":7495,"line_start":204,"line_end":204,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7496,"byte_end":7499,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"! let encoded = a.encode();","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7500,"byte_end":7529,"line_start":206,"line_end":206,"column_start":1,"column_end":30}},{"value":"! assert_eq!(encoded.len(), 2);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7530,"byte_end":7563,"line_start":207,"line_end":207,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7564,"byte_end":7567,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! # fn main() { }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7568,"byte_end":7587,"line_start":209,"line_end":209,"column_start":1,"column_end":20}},{"value":"! ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7588,"byte_end":7595,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7596,"byte_end":7599,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! ## Derive attributes","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7600,"byte_end":7624,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7625,"byte_end":7628,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! The derive implementation supports the following attributes:","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7629,"byte_end":7693,"line_start":214,"line_end":214,"column_start":1,"column_end":65}},{"value":"! - `codec(dumb_trait_bound)`: This attribute needs to be placed above the type that one of the trait","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7694,"byte_end":7797,"line_start":215,"line_end":215,"column_start":1,"column_end":104}},{"value":"!   should be implemented for. It will make the algorithm that determines the to-add trait bounds","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7798,"byte_end":7897,"line_start":216,"line_end":216,"column_start":1,"column_end":100}},{"value":"!   fall back to just use the type parameters of the type. This can be useful for situation where","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7898,"byte_end":7997,"line_start":217,"line_end":217,"column_start":1,"column_end":100}},{"value":"!   the algorithm includes private types in the public interface. By using this attribute, you should","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":7998,"byte_end":8101,"line_start":218,"line_end":218,"column_start":1,"column_end":104}},{"value":"!   not get this error/warning again.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8102,"byte_end":8141,"line_start":219,"line_end":219,"column_start":1,"column_end":40}},{"value":"! - `codec(skip)`: Needs to be placed above a field and makes the field to be skipped while encoding/decoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8142,"byte_end":8254,"line_start":220,"line_end":220,"column_start":1,"column_end":113}},{"value":"! - `codec(compact)`: Needs to be placed above a field and makes the field use compact encoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8255,"byte_end":8353,"line_start":221,"line_end":221,"column_start":1,"column_end":99}},{"value":"!   (The type needs to support compact encoding.)","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8354,"byte_end":8405,"line_start":222,"line_end":222,"column_start":1,"column_end":52}},{"value":"! - `codec(encoded_as(OtherType))`: Needs to be placed above a field and makes the field being encoded","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8406,"byte_end":8510,"line_start":223,"line_end":223,"column_start":1,"column_end":105}},{"value":"!   by using `OtherType`.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8511,"byte_end":8538,"line_start":224,"line_end":224,"column_start":1,"column_end":28}},{"value":"! - `codec(index(\"0\"))`: Needs to be placed above an enum variant to make the variant use the given","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8539,"byte_end":8640,"line_start":225,"line_end":225,"column_start":1,"column_end":102}},{"value":"!   index when encoded. By default the index is determined by counting from `0` beginning wth the","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8641,"byte_end":8740,"line_start":226,"line_end":226,"column_start":1,"column_end":100}},{"value":"!   first variant.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8741,"byte_end":8761,"line_start":227,"line_end":227,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8762,"byte_end":8765,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":8767,"byte_end":8789,"line_start":230,"line_end":230,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9250,"byte_end":9255,"line_start":253,"line_end":253,"column_start":9,"column_end":14},"name":"alloc","qualname":"::alloc","value":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/lib.rs","byte_start":9203,"byte_end":9226,"line_start":251,"line_end":251,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11474,"byte_end":11479,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"Error","qualname":"::codec::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Descriptive error type\n","sig":null,"attributes":[{"value":"/ Descriptive error type","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11373,"byte_end":11399,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11400,"byte_end":11423,"line_start":46,"line_end":46,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11820,"byte_end":11824,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"what","qualname":"<Error>::what","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Error description","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11651,"byte_end":11674,"line_start":56,"line_end":56,"column_start":2,"column_end":25}},{"value":"/ Error description","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11676,"byte_end":11697,"line_start":57,"line_end":57,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11699,"byte_end":11702,"line_start":58,"line_end":58,"column_start":2,"column_end":5}},{"value":"/ This function returns an actual error str when running in `std`","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11704,"byte_end":11771,"line_start":59,"line_end":59,"column_start":2,"column_end":69}},{"value":"/ environment, but `\"\"` on `no_std`.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11773,"byte_end":11811,"line_start":60,"line_end":60,"column_start":2,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12590,"byte_end":12595,"line_start":102,"line_end":102,"column_start":11,"column_end":16},"name":"Input","qualname":"::codec::Input","value":"Input","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" Trait that allows reading of data into a slice.\n","sig":null,"attributes":[{"value":"/ Trait that allows reading of data into a slice.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12528,"byte_end":12579,"line_start":101,"line_end":101,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13010,"byte_end":13023,"line_start":109,"line_end":109,"column_start":5,"column_end":18},"name":"remaining_len","qualname":"::codec::Input::remaining_len","value":"fn (&mut self) -> Result<Option<usize>, Error>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Should return the remaining length of the input data. If no information about the input\n length is available, `None` should be returned.","sig":null,"attributes":[{"value":"/ Should return the remaining length of the input data. If no information about the input","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12599,"byte_end":12690,"line_start":103,"line_end":103,"column_start":2,"column_end":93}},{"value":"/ length is available, `None` should be returned.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12692,"byte_end":12743,"line_start":104,"line_end":104,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12745,"byte_end":12748,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ The length is used to constrain the preallocation while decoding. Returning a garbage","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12750,"byte_end":12839,"line_start":106,"line_end":106,"column_start":2,"column_end":91}},{"value":"/ length can open the doors for a denial of service attack to your application.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12841,"byte_end":12922,"line_start":107,"line_end":107,"column_start":2,"column_end":83}},{"value":"/ Otherwise, returning `None` can decrease the performance of your application.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12924,"byte_end":13005,"line_start":108,"line_end":108,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13256,"byte_end":13260,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"read","qualname":"::codec::Input::read","value":"fn (&mut self, into: &mut [u8]) -> Result<(), Error>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read the exact number of bytes required to fill the given buffer.","sig":null,"attributes":[{"value":"/ Read the exact number of bytes required to fill the given buffer.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13070,"byte_end":13139,"line_start":111,"line_end":111,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13141,"byte_end":13144,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ Note that this function is similar to `std::io::Read::read_exact` and not","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13146,"byte_end":13223,"line_start":113,"line_end":113,"column_start":2,"column_end":79}},{"value":"/ `std::io::Read::read`.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13225,"byte_end":13251,"line_start":114,"line_end":114,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13356,"byte_end":13365,"line_start":118,"line_end":118,"column_start":5,"column_end":14},"name":"read_byte","qualname":"::codec::Input::read_byte","value":"fn (&mut self) -> Result<u8, Error>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a single byte from the input.\n","sig":null,"attributes":[{"value":"/ Read a single byte from the input.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13313,"byte_end":13351,"line_start":117,"line_end":117,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13672,"byte_end":13683,"line_start":128,"line_end":128,"column_start":5,"column_end":16},"name":"descend_ref","qualname":"::codec::Input::descend_ref","value":"fn (&mut self) -> Result<(), Error>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Descend into nested reference when decoding.\n This is called when decoding a new refence-based instance,\n such as `Vec` or `Box`. Currently all such types are\n allocated on the heap.\n","sig":null,"attributes":[{"value":"/ Descend into nested reference when decoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13469,"byte_end":13517,"line_start":124,"line_end":124,"column_start":2,"column_end":50}},{"value":"/ This is called when decoding a new refence-based instance,","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13519,"byte_end":13581,"line_start":125,"line_end":125,"column_start":2,"column_end":64}},{"value":"/ such as `Vec` or `Box`. Currently all such types are","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13583,"byte_end":13639,"line_start":126,"line_end":126,"column_start":2,"column_end":58}},{"value":"/ allocated on the heap.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13641,"byte_end":13667,"line_start":127,"line_end":127,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13858,"byte_end":13868,"line_start":134,"line_end":134,"column_start":5,"column_end":15},"name":"ascend_ref","qualname":"::codec::Input::ascend_ref","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Ascend to previous structure level when decoding.\n This is called when decoding reference-based type is finished.\n","sig":null,"attributes":[{"value":"/ Ascend to previous structure level when decoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13732,"byte_end":13785,"line_start":132,"line_end":132,"column_start":2,"column_end":55}},{"value":"/ This is called when decoding reference-based type is finished.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":13787,"byte_end":13853,"line_start":133,"line_end":133,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":15484,"byte_end":15492,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::codec::IoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper that implements Input for any `Read` and `Seek` type.\n","sig":null,"attributes":[{"value":"/ Wrapper that implements Input for any `Read` and `Seek` type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":15383,"byte_end":15448,"line_start":181,"line_end":181,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":15449,"byte_end":15472,"line_start":182,"line_end":182,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16334,"byte_end":16340,"line_start":212,"line_end":212,"column_start":11,"column_end":17},"name":"Output","qualname":"::codec::Output","value":"Output: Sized","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":" Trait that allows writing of data.\n","sig":null,"attributes":[{"value":"/ Trait that allows writing of data.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16285,"byte_end":16323,"line_start":211,"line_end":211,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16380,"byte_end":16385,"line_start":214,"line_end":214,"column_start":5,"column_end":10},"name":"write","qualname":"::codec::Output::write","value":"fn (&mut self, bytes: &[u8]) -> ()","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Write to the output.\n","sig":null,"attributes":[{"value":"/ Write to the output.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16351,"byte_end":16375,"line_start":213,"line_end":213,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16457,"byte_end":16466,"line_start":217,"line_end":217,"column_start":5,"column_end":14},"name":"push_byte","qualname":"::codec::Output::push_byte","value":"fn (&mut self, byte: u8) -> ()","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Write a single byte to the output.\n","sig":null,"attributes":[{"value":"/ Write a single byte to the output.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16414,"byte_end":16452,"line_start":216,"line_end":216,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16571,"byte_end":16575,"line_start":222,"line_end":222,"column_start":5,"column_end":9},"name":"push","qualname":"::codec::Output::push","value":"fn <V> (&mut self, value: &V) -> ()","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Write encoding of given value to the output.\n","sig":null,"attributes":[{"value":"/ Write encoding of given value to the output.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16518,"byte_end":16566,"line_start":221,"line_end":221,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17267,"byte_end":17274,"line_start":249,"line_end":249,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::codec::TypeInfo::Unknown","value":"TypeInfo::Unknown","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.\n","sig":null,"attributes":[{"value":"/ Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17163,"byte_end":17265,"line_start":248,"line_end":248,"column_start":2,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":87},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17277,"byte_end":17279,"line_start":250,"line_end":250,"column_start":2,"column_end":4},"name":"U8","qualname":"::codec::TypeInfo::U8","value":"TypeInfo::U8","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":89},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17282,"byte_end":17284,"line_start":251,"line_end":251,"column_start":2,"column_end":4},"name":"I8","qualname":"::codec::TypeInfo::I8","value":"TypeInfo::I8","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":91},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17287,"byte_end":17290,"line_start":252,"line_end":252,"column_start":2,"column_end":5},"name":"U16","qualname":"::codec::TypeInfo::U16","value":"TypeInfo::U16","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":93},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17293,"byte_end":17296,"line_start":253,"line_end":253,"column_start":2,"column_end":5},"name":"I16","qualname":"::codec::TypeInfo::I16","value":"TypeInfo::I16","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":95},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17299,"byte_end":17302,"line_start":254,"line_end":254,"column_start":2,"column_end":5},"name":"U32","qualname":"::codec::TypeInfo::U32","value":"TypeInfo::U32","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":97},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17305,"byte_end":17308,"line_start":255,"line_end":255,"column_start":2,"column_end":5},"name":"I32","qualname":"::codec::TypeInfo::I32","value":"TypeInfo::I32","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":99},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17311,"byte_end":17314,"line_start":256,"line_end":256,"column_start":2,"column_end":5},"name":"U64","qualname":"::codec::TypeInfo::U64","value":"TypeInfo::U64","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":101},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17317,"byte_end":17320,"line_start":257,"line_end":257,"column_start":2,"column_end":5},"name":"I64","qualname":"::codec::TypeInfo::I64","value":"TypeInfo::I64","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":103},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17323,"byte_end":17327,"line_start":258,"line_end":258,"column_start":2,"column_end":6},"name":"U128","qualname":"::codec::TypeInfo::U128","value":"TypeInfo::U128","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":105},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17330,"byte_end":17334,"line_start":259,"line_end":259,"column_start":2,"column_end":6},"name":"I128","qualname":"::codec::TypeInfo::I128","value":"TypeInfo::I128","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":84},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17151,"byte_end":17159,"line_start":247,"line_end":247,"column_start":10,"column_end":18},"name":"TypeInfo","qualname":"::codec::TypeInfo","value":"TypeInfo::{Unknown, U8, I8, U16, I16, U32, I32, U64, I64, U128, I128}","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105}],"decl_id":null,"docs":" !INTERNAL USE ONLY!","sig":null,"attributes":[{"value":"/ !INTERNAL USE ONLY!","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16981,"byte_end":17004,"line_start":242,"line_end":242,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17005,"byte_end":17008,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This enum provides type information to optimize encoding/decoding by doing fake specialization.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17009,"byte_end":17108,"line_start":244,"line_end":244,"column_start":1,"column_end":100}},{"value":"non_exhaustive","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17124,"byte_end":17141,"line_start":246,"line_end":246,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":107},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17604,"byte_end":17610,"line_start":266,"line_end":266,"column_start":11,"column_end":17},"name":"Encode","qualname":"::codec::Encode","value":"Encode","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Trait that allows zero-copy write of value-references to slices in LE format.","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy write of value-references to slices in LE format.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17339,"byte_end":17420,"line_start":262,"line_end":262,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17421,"byte_end":17424,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ Implementations should override `using_encoded` for value types and `encode_to` and `size_hint` for allocating types.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17425,"byte_end":17546,"line_start":264,"line_end":264,"column_start":1,"column_end":122}},{"value":"/ Wrapper types should override all methods.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17547,"byte_end":17593,"line_start":265,"line_end":265,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":108},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17751,"byte_end":17760,"line_start":270,"line_end":270,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Encode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17962,"byte_end":17971,"line_start":276,"line_end":276,"column_start":5,"column_end":14},"name":"size_hint","qualname":"::codec::Encode::size_hint","value":"fn (&self) -> usize","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" If possible give a hint of expected size of the encoding.","sig":null,"attributes":[{"value":"/ If possible give a hint of expected size of the encoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17794,"byte_end":17855,"line_start":272,"line_end":272,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17857,"byte_end":17860,"line_start":273,"line_end":273,"column_start":2,"column_end":5}},{"value":"/ This method is used inside default implementation of `encode`","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17862,"byte_end":17927,"line_start":274,"line_end":274,"column_start":2,"column_end":67}},{"value":"/ to avoid re-allocations.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17929,"byte_end":17957,"line_start":275,"line_end":275,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18065,"byte_end":18074,"line_start":281,"line_end":281,"column_start":5,"column_end":14},"name":"encode_to","qualname":"::codec::Encode::encode_to","value":"fn <T> (&self, dest: &mut T) -> ()","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Convert self to a slice and append it to the destination.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and append it to the destination.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":17999,"byte_end":18060,"line_start":280,"line_end":280,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18200,"byte_end":18206,"line_start":286,"line_end":286,"column_start":5,"column_end":11},"name":"encode","qualname":"::codec::Encode::encode","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Convert self to an owned vector.\n","sig":null,"attributes":[{"value":"/ Convert self to an owned vector.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18159,"byte_end":18195,"line_start":285,"line_end":285,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18389,"byte_end":18402,"line_start":293,"line_end":293,"column_start":5,"column_end":18},"name":"using_encoded","qualname":"::codec::Encode::using_encoded","value":"fn <R, F> (&self, f: F) -> R","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Convert self to a slice and then invoke the given closure with it.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and then invoke the given closure with it.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18314,"byte_end":18384,"line_start":292,"line_end":292,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18605,"byte_end":18617,"line_start":300,"line_end":300,"column_start":11,"column_end":23},"name":"DecodeLength","qualname":"::codec::DecodeLength","value":"DecodeLength","parent":null,"children":[{"krate":0,"index":118}],"decl_id":null,"docs":" Trait that allows the length of a collection to be read, without having\n to read and decode the entire elements.\n","sig":null,"attributes":[{"value":"/ Trait that allows the length of a collection to be read, without having","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18475,"byte_end":18550,"line_start":298,"line_end":298,"column_start":1,"column_end":76}},{"value":"/ to read and decode the entire elements.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18551,"byte_end":18594,"line_start":299,"line_end":299,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18678,"byte_end":18681,"line_start":302,"line_end":302,"column_start":5,"column_end":8},"name":"len","qualname":"::codec::DecodeLength::len","value":"fn (self_encoded: &[u8]) -> Result<usize, Error>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Return the number of elements in `self_encoded`.\n","sig":null,"attributes":[{"value":"/ Return the number of elements in `self_encoded`.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18621,"byte_end":18673,"line_start":301,"line_end":301,"column_start":2,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":119},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18824,"byte_end":18830,"line_start":306,"line_end":306,"column_start":11,"column_end":17},"name":"Decode","qualname":"::codec::Decode","value":"Decode: Sized","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" Trait that allows zero-copy read of value-references from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read of value-references from slices in LE format.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18731,"byte_end":18813,"line_start":305,"line_end":305,"column_start":1,"column_end":83}}]},{"kind":"Const","id":{"krate":0,"index":120},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18978,"byte_end":18987,"line_start":310,"line_end":310,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Decode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19074,"byte_end":19080,"line_start":313,"line_end":313,"column_start":5,"column_end":11},"name":"decode","qualname":"::codec::Decode::decode","value":"fn <I> (value: &mut I) -> Result<Self, Error>","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" Attempt to deserialise the value from input.\n","sig":null,"attributes":[{"value":"/ Attempt to deserialise the value from input.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19021,"byte_end":19069,"line_start":312,"line_end":312,"column_start":2,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19235,"byte_end":19240,"line_start":317,"line_end":317,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec: Decode + Encode","parent":null,"children":[],"decl_id":null,"docs":" Trait that allows zero-copy read/write of value-references to/from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read/write of value-references to/from slices in LE format.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19133,"byte_end":19224,"line_start":316,"line_end":316,"column_start":1,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19444,"byte_end":19454,"line_start":322,"line_end":322,"column_start":11,"column_end":21},"name":"FullEncode","qualname":"::codec::FullEncode","value":"FullEncode: Encode + EncodeLike","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19302,"byte_end":19399,"line_start":320,"line_end":320,"column_start":1,"column_end":98}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19400,"byte_end":19433,"line_start":321,"line_end":321,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19670,"byte_end":19679,"line_start":327,"line_end":327,"column_start":11,"column_end":20},"name":"FullCodec","qualname":"::codec::FullCodec","value":"FullCodec: Decode + FullEncode","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19529,"byte_end":19625,"line_start":325,"line_end":325,"column_start":1,"column_end":97}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19626,"byte_end":19659,"line_start":326,"line_end":326,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19997,"byte_end":20014,"line_start":335,"line_end":335,"column_start":11,"column_end":28},"name":"WrapperTypeEncode","qualname":"::codec::WrapperTypeEncode","value":"WrapperTypeEncode: Deref","parent":null,"children":[],"decl_id":null,"docs":" A marker trait for types that wrap other encodable type.","sig":null,"attributes":[{"value":"/ A marker trait for types that wrap other encodable type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19753,"byte_end":19813,"line_start":330,"line_end":330,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19814,"byte_end":19817,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ Such types should not carry any additional information","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19818,"byte_end":19876,"line_start":332,"line_end":332,"column_start":1,"column_end":59}},{"value":"/ that would require to be encoded, because the encoding","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19877,"byte_end":19935,"line_start":333,"line_end":333,"column_start":1,"column_end":59}},{"value":"/ is assumed to be the same as the wrapped type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19936,"byte_end":19986,"line_start":334,"line_end":334,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":205},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22096,"byte_end":22113,"line_start":403,"line_end":403,"column_start":11,"column_end":28},"name":"WrapperTypeDecode","qualname":"::codec::WrapperTypeDecode","value":"WrapperTypeDecode: Sized","parent":null,"children":[{"krate":0,"index":206}],"decl_id":null,"docs":" A marker trait for types that can be created solely from other decodable types.","sig":null,"attributes":[{"value":"/ A marker trait for types that can be created solely from other decodable types.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21921,"byte_end":22004,"line_start":400,"line_end":400,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22005,"byte_end":22008,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ The decoding of such type is assumed to be the same as the wrapped type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22009,"byte_end":22085,"line_start":402,"line_end":402,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":206},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22150,"byte_end":22157,"line_start":405,"line_end":405,"column_start":7,"column_end":14},"name":"Wrapped","qualname":"::codec::WrapperTypeDecode::Wrapped","value":"type Wrapped: Into<Self>;","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" A wrapped type.\n","sig":null,"attributes":[{"value":"/ A wrapped type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22124,"byte_end":22143,"line_start":404,"line_end":404,"column_start":2,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":23910,"byte_end":23921,"line_start":457,"line_end":457,"column_start":11,"column_end":22},"name":"EncodeAsRef","qualname":"::codec::EncodeAsRef","value":"EncodeAsRef<'a, T: 'a>","parent":null,"children":[{"krate":0,"index":225}],"decl_id":null,"docs":" Something that can be encoded as a reference.\n","sig":null,"attributes":[{"value":"/ Something that can be encoded as a reference.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":23850,"byte_end":23899,"line_start":456,"line_end":456,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":23992,"byte_end":23999,"line_start":459,"line_end":459,"column_start":7,"column_end":14},"name":"RefType","qualname":"::codec::EncodeAsRef::RefType","value":"type RefType: Encode + From<&'a T>;","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" The reference type that is used for encoding.\n","sig":null,"attributes":[{"value":"/ The reference type that is used for encoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":23936,"byte_end":23985,"line_start":458,"line_end":458,"column_start":2,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":757},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25004,"byte_end":25014,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"OptionBool","qualname":"::codec::OptionBool","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shim type because we can't do a specialised implementation for `Option<bool>` directly.\n","sig":null,"attributes":[{"value":"/ Shim type because we can't do a specialised implementation for `Option<bool>` directly.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":24863,"byte_end":24954,"line_start":502,"line_end":502,"column_start":1,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":408},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55524,"byte_end":55534,"line_start":71,"line_end":71,"column_start":11,"column_end":21},"name":"CompactLen","qualname":"::compact::CompactLen","value":"CompactLen<T>","parent":null,"children":[{"krate":0,"index":410}],"decl_id":null,"docs":" Something that can return the compact encoded length for a given value.\n","sig":null,"attributes":[{"value":"/ Something that can return the compact encoded length for a given value.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55438,"byte_end":55513,"line_start":70,"line_end":70,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55605,"byte_end":55616,"line_start":73,"line_end":73,"column_start":5,"column_end":16},"name":"compact_len","qualname":"::compact::CompactLen::compact_len","value":"fn (val: &T) -> usize","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Returns the compact encoded length for the given value.\n","sig":null,"attributes":[{"value":"/ Returns the compact encoded length for the given value.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55541,"byte_end":55600,"line_start":72,"line_end":72,"column_start":2,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6346},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55796,"byte_end":55803,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"Compact","qualname":"::compact::Compact","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55639,"byte_end":55729,"line_start":76,"line_end":76,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":418},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56053,"byte_end":56062,"line_start":89,"line_end":89,"column_start":11,"column_end":20},"name":"CompactAs","qualname":"::compact::CompactAs","value":"CompactAs: From<Compact<Self>>","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"decl_id":null,"docs":" Allow foreign structs to be wrap in Compact\n","sig":null,"attributes":[{"value":"/ Allow foreign structs to be wrap in Compact","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55995,"byte_end":56042,"line_start":88,"line_end":88,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":419},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56159,"byte_end":56161,"line_start":91,"line_end":91,"column_start":7,"column_end":9},"name":"As","qualname":"::compact::CompactAs::As","value":"type As;","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" A compact-encodable type that should be used as the encoding.\n","sig":null,"attributes":[{"value":"/ A compact-encodable type that should be used as the encoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56087,"byte_end":56152,"line_start":90,"line_end":90,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56201,"byte_end":56210,"line_start":94,"line_end":94,"column_start":5,"column_end":14},"name":"encode_as","qualname":"::compact::CompactAs::encode_as","value":"fn (&self) -> &Self::As","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Returns the encodable type.\n","sig":null,"attributes":[{"value":"/ Returns the encodable type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56165,"byte_end":56196,"line_start":93,"line_end":93,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56281,"byte_end":56292,"line_start":97,"line_end":97,"column_start":5,"column_end":16},"name":"decode_from","qualname":"::compact::CompactAs::decode_from","value":"fn (_: Self::As) -> Self","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Create `Self` from the decodable type.\n","sig":null,"attributes":[{"value":"/ Create `Self` from the decodable type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56234,"byte_end":56276,"line_start":96,"line_end":96,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6388},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":57995,"byte_end":58005,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"CompactRef","qualname":"::compact::CompactRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":57851,"byte_end":57945,"line_start":177,"line_end":177,"column_start":1,"column_end":95}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58806,"byte_end":58821,"line_start":206,"line_end":206,"column_start":11,"column_end":26},"name":"MaybeDebugSerde","qualname":"::compact::MaybeDebugSerde","value":"MaybeDebugSerde: core::fmt::Debug + serde::Serialize + for<'a> serde::Deserialize<'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58772,"byte_end":58795,"line_start":205,"line_end":205,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":477},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59244,"byte_end":59254,"line_start":216,"line_end":216,"column_start":11,"column_end":21},"name":"HasCompact","qualname":"::compact::HasCompact","value":"HasCompact: Sized","parent":null,"children":[{"krate":0,"index":478}],"decl_id":null,"docs":" Trait that tells you if a given type can be encoded/decoded in a compact way.\n","sig":null,"attributes":[{"value":"/ Trait that tells you if a given type can be encoded/decoded in a compact way.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59152,"byte_end":59233,"line_start":215,"line_end":215,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":478},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59305,"byte_end":59309,"line_start":218,"line_end":218,"column_start":7,"column_end":11},"name":"Type","qualname":"::compact::HasCompact::Type","value":"type Type: for<'a> EncodeAsRef<'a, Self> + Decode + From<Self> + Into<Self> + Clone +\n\t\tPartialEq + Eq + MaybeDebugSerde;","parent":{"krate":0,"index":477},"children":[],"decl_id":null,"docs":" The compact type; this can be\n","sig":null,"attributes":[{"value":"/ The compact type; this can be","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59265,"byte_end":59298,"line_start":217,"line_end":217,"column_start":2,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":577},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/joiner.rs","byte_start":80130,"byte_end":80136,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"Joiner","qualname":"::joiner::Joiner","value":"Joiner","parent":null,"children":[{"krate":0,"index":578}],"decl_id":null,"docs":" Trait to allow itself to be serialised into a value which can be extended\n by bytes.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised into a value which can be extended","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/joiner.rs","byte_start":80028,"byte_end":80105,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ by bytes.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/joiner.rs","byte_start":80106,"byte_end":80119,"line_start":22,"line_end":22,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/joiner.rs","byte_start":80184,"byte_end":80187,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"and","qualname":"::joiner::Joiner::and","value":"fn <V> (self, value: &V) -> Self","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":" Append encoding of value to `Self`.\n","sig":null,"attributes":[{"value":"/ Append encoding of value to `Self`.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/joiner.rs","byte_start":80140,"byte_end":80179,"line_start":24,"line_end":24,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":590},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/keyedvec.rs","byte_start":81201,"byte_end":81209,"line_start":23,"line_end":23,"column_start":11,"column_end":19},"name":"KeyedVec","qualname":"::keyedvec::KeyedVec","value":"KeyedVec","parent":null,"children":[{"krate":0,"index":591}],"decl_id":null,"docs":" Trait to allow itself to be serialised and prepended by a given slice.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised and prepended by a given slice.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/keyedvec.rs","byte_start":81116,"byte_end":81190,"line_start":22,"line_end":22,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/keyedvec.rs","byte_start":81276,"byte_end":81288,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"to_keyed_vec","qualname":"::keyedvec::KeyedVec::to_keyed_vec","value":"fn (&self, prepend_key: &[u8]) -> Vec<u8>","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" Return an encoding of `Self` prepended by given slice.\n","sig":null,"attributes":[{"value":"/ Return an encoding of `Self` prepended by given slice.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/keyedvec.rs","byte_start":81213,"byte_end":81271,"line_start":24,"line_end":24,"column_start":2,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":601},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82441,"byte_end":82450,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"DecodeAll","qualname":"::decode_all::DecodeAll","value":"DecodeAll: Sized","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":" Extension trait to [`Decode`] that ensures that the given input data is consumed completly while\n decoding.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] that ensures that the given input data is consumed completly while","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82316,"byte_end":82416,"line_start":20,"line_end":20,"column_start":1,"column_end":101}},{"value":"/ decoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82417,"byte_end":82430,"line_start":21,"line_end":21,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82580,"byte_end":82590,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"decode_all","qualname":"::decode_all::DecodeAll::decode_all","value":"fn (input: &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data. If not all data is consumed, an error\n is returned.\n","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data. If not all data is consumed, an error","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82461,"byte_end":82557,"line_start":23,"line_end":23,"column_start":2,"column_end":98}},{"value":"/ is returned.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82559,"byte_end":82575,"line_start":24,"line_end":24,"column_start":2,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":612},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85347,"byte_end":85358,"line_start":22,"line_end":22,"column_start":11,"column_end":22},"name":"DecodeLimit","qualname":"::depth_limit::DecodeLimit","value":"DecodeLimit: Sized","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Extension trait to [`Decode`] that ensures that the given input data is consumed completly while\n decoding.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] that ensures that the given input data is consumed completly while","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85222,"byte_end":85322,"line_start":20,"line_end":20,"column_start":1,"column_end":101}},{"value":"/ decoding.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85323,"byte_end":85336,"line_start":21,"line_end":21,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85445,"byte_end":85468,"line_start":25,"line_end":25,"column_start":5,"column_end":28},"name":"decode_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_with_depth_limit","value":"fn (limit: u32, input: &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" Decode `Self` with given maximum recursion depth.\n is returned.\n","sig":null,"attributes":[{"value":"/ Decode `Self` with given maximum recursion depth.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85369,"byte_end":85422,"line_start":23,"line_end":23,"column_start":2,"column_end":55}},{"value":"/ is returned.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85424,"byte_end":85440,"line_start":24,"line_end":24,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85639,"byte_end":85666,"line_start":28,"line_end":28,"column_start":5,"column_end":32},"name":"decode_all_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_all_with_depth_limit","value":"fn (limit: u32, input: &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data. If not all data is consumed, an error\n is returned.\n","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data. If not all data is consumed, an error","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85520,"byte_end":85616,"line_start":26,"line_end":26,"column_start":2,"column_end":98}},{"value":"/ is returned.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85618,"byte_end":85634,"line_start":27,"line_end":27,"column_start":2,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":646},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88313,"byte_end":88325,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"EncodeAppend","qualname":"::encode_append::EncodeAppend","value":"EncodeAppend","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":651}],"decl_id":null,"docs":" Trait that allows to append items to an encoded representation without\n decoding all previous added items.\n","sig":null,"attributes":[{"value":"/ Trait that allows to append items to an encoded representation without","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88189,"byte_end":88263,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ decoding all previous added items.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88264,"byte_end":88302,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":647},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88371,"byte_end":88375,"line_start":26,"line_end":26,"column_start":7,"column_end":11},"name":"Item","qualname":"::encode_append::EncodeAppend::Item","value":"type Item: Encode;","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" The item that will be appended.\n","sig":null,"attributes":[{"value":"/ The item that will be appended.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88329,"byte_end":88364,"line_start":25,"line_end":25,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88604,"byte_end":88610,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"append","qualname":"::encode_append::EncodeAppend::append","value":"fn <'a, I> (self_encoded: Vec<u8>, iter: I) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" Append all items in `iter` to the given `self_encoded` representation\n or if `self_encoded` value is empty then insert the given input data.\n","sig":null,"attributes":[{"value":"/ Append all items in `iter` to the given `self_encoded` representation","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88387,"byte_end":88460,"line_start":28,"line_end":28,"column_start":2,"column_end":75}},{"value":"/ or if `self_encoded` value is empty then insert the given input data.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88462,"byte_end":88535,"line_start":29,"line_end":29,"column_start":2,"column_end":75}},{"value":"deprecated(note = \"Consider using `append_or_new` instead\")","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88537,"byte_end":88599,"line_start":30,"line_end":30,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89366,"byte_end":89379,"line_start":53,"line_end":53,"column_start":5,"column_end":18},"name":"append_or_new","qualname":"::encode_append::EncodeAppend::append_or_new","value":"fn <EncodeLikeItem, I> (self_encoded: Vec<u8>, iter: I) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" Append all items in `iter` to the given `self_encoded` representation\n or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","sig":null,"attributes":[{"value":"/ Append all items in `iter` to the given `self_encoded` representation","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88775,"byte_end":88848,"line_start":36,"line_end":36,"column_start":2,"column_end":75}},{"value":"/ or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88850,"byte_end":88938,"line_start":37,"line_end":37,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88940,"byte_end":88943,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88945,"byte_end":88958,"line_start":39,"line_end":39,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88960,"byte_end":88963,"line_start":40,"line_end":40,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88965,"byte_end":88972,"line_start":41,"line_end":41,"column_start":2,"column_end":9}},{"value":"/# use parity_scale_codec::EncodeAppend;","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":88974,"byte_end":89016,"line_start":42,"line_end":42,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89018,"byte_end":89021,"line_start":43,"line_end":43,"column_start":2,"column_end":5}},{"value":"/ // Some encoded data","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89023,"byte_end":89047,"line_start":44,"line_end":44,"column_start":2,"column_end":26}},{"value":"/ let data = Vec::new();","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89049,"byte_end":89075,"line_start":45,"line_end":45,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89077,"byte_end":89080,"line_start":46,"line_end":46,"column_start":2,"column_end":5}},{"value":"/ let item = 8u32;","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89082,"byte_end":89102,"line_start":47,"line_end":47,"column_start":2,"column_end":22}},{"value":"/ let encoded = <Vec<u32> as EncodeAppend>::append(data, std::iter::once(&item)).expect(\"Adds new element\");","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89104,"byte_end":89214,"line_start":48,"line_end":48,"column_start":2,"column_end":112}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89216,"byte_end":89219,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ // Add multiple element","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89221,"byte_end":89248,"line_start":50,"line_end":50,"column_start":2,"column_end":29}},{"value":"/ <Vec<u32> as EncodeAppend>::append(encoded, &[700u32, 800u32, 10u32]).expect(\"Adds new elements\");","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89250,"byte_end":89352,"line_start":51,"line_end":51,"column_start":2,"column_end":104}},{"value":"/ ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89354,"byte_end":89361,"line_start":52,"line_end":52,"column_start":2,"column_end":9}}]},{"kind":"Trait","id":{"krate":0,"index":684},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98276,"byte_end":98286,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"EncodeLike","qualname":"::encode_like::EncodeLike","value":"EncodeLike<T: Encode = Self>: Sized + Encode","parent":null,"children":[],"decl_id":null,"docs":" A marker trait that tells the compiler that a type encode to the same representation as another\n type.","sig":null,"attributes":[{"value":"/ A marker trait that tells the compiler that a type encode to the same representation as another","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96177,"byte_end":96276,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96277,"byte_end":96286,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96287,"byte_end":96290,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ E.g. `Vec<u8>` has the same encoded representation as `&[u8]`.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96291,"byte_end":96357,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96358,"byte_end":96361,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96362,"byte_end":96375,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96376,"byte_end":96379,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96380,"byte_end":96387,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96388,"byte_end":96438,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96439,"byte_end":96498,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96499,"byte_end":96549,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96550,"byte_end":96555,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96556,"byte_end":96559,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96560,"byte_end":96575,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     // Just pass the a reference to the normal tuple.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96576,"byte_end":96633,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/     encode_like::<(u32, u32), _>(&(1u32, 2u32));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96634,"byte_end":96686,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/     // Pass a tuple of references","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96687,"byte_end":96724,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, &2u32));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96725,"byte_end":96779,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/     // Pass a tuple of a reference and a value.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96780,"byte_end":96831,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, 2u32));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96832,"byte_end":96885,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96886,"byte_end":96891,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96892,"byte_end":96899,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96900,"byte_end":96903,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96904,"byte_end":96917,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96918,"byte_end":96921,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The relation is not symetric, `T` implements `EncodeLike<U>` does not mean `U` has same","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":96922,"byte_end":97013,"line_start":42,"line_end":42,"column_start":1,"column_end":92}},{"value":"/ representation as `T`.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97014,"byte_end":97040,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ For instance we could imaging a non zero integer to be encoded to the same representation as","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97041,"byte_end":97137,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/ the said integer but not the other way around.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97138,"byte_end":97188,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97189,"byte_end":97192,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Limitation","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97193,"byte_end":97209,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97210,"byte_end":97213,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Not all possible implementations of EncodeLike are implemented (for instance `Box<Box<u32>>`","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97214,"byte_end":97310,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ does not implement `EncodeLike<u32>`). To bypass this issue either open a PR to add the new","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97311,"byte_end":97406,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ combination or use [`Ref`](./struct.Ref.html) reference wrapper or define your own wrapper","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97407,"byte_end":97501,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ and implement `EncodeLike` on it as such:","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97502,"byte_end":97547,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97548,"byte_end":97555,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode, WrapperTypeEncode};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97556,"byte_end":97625,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97626,"byte_end":97685,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97686,"byte_end":97736,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97737,"byte_end":97742,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97743,"byte_end":97746,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ struct MyWrapper<'a>(&'a (Box<Box<u32>>, u32));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97747,"byte_end":97798,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/ impl<'a> core::ops::Deref for MyWrapper<'a> { // Or use derive_deref crate","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97799,"byte_end":97877,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/     type Target = (Box<Box<u32>>, u32);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97878,"byte_end":97921,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/     fn deref(&self) -> &Self::Target { &self.0 }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97922,"byte_end":97974,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97975,"byte_end":97980,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97981,"byte_end":97984,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl<'a> parity_scale_codec::WrapperTypeEncode for MyWrapper<'a> {}","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":97985,"byte_end":98056,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ impl<'a> parity_scale_codec::EncodeLike<(u32, u32)> for MyWrapper<'a> {}","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98057,"byte_end":98133,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98134,"byte_end":98137,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98138,"byte_end":98153,"line_start":68,"line_end":68,"column_start":1,"column_end":16}},{"value":"/     let v = (Box::new(Box::new(0)), 0);","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98154,"byte_end":98197,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/     encode_like::<(u32, u32), _>(&MyWrapper(&v));","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98198,"byte_end":98251,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98252,"byte_end":98257,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98258,"byte_end":98265,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98723,"byte_end":98726,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"Ref","qualname":"::encode_like::Ref","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference wrapper that implement encode like any type that is encoded like its inner type.","sig":null,"attributes":[{"value":"/ Reference wrapper that implement encode like any type that is encoded like its inner type.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98325,"byte_end":98419,"line_start":75,"line_end":75,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98420,"byte_end":98423,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98424,"byte_end":98437,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98438,"byte_end":98441,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98442,"byte_end":98453,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use parity_scale_codec::{EncodeLike, Ref};","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98454,"byte_end":98502,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/ fn foo<T: EncodeLike<u8>>(t: T) -> T {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98503,"byte_end":98545,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/     store_t(Ref::from(&t)); // Store t without moving it, but only using a reference.","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98546,"byte_end":98635,"line_start":82,"line_end":82,"column_start":1,"column_end":90}},{"value":"/     t","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98636,"byte_end":98645,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98646,"byte_end":98651,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98652,"byte_end":98655,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ fn store_t<T: EncodeLike<u8>>(t: T) {","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98656,"byte_end":98697,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98698,"byte_end":98703,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98704,"byte_end":98711,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11642,"byte_end":11647,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12130,"byte_end":12135,"line_start":76,"line_end":76,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12277,"byte_end":12282,"line_start":83,"line_end":83,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12361,"byte_end":12366,"line_start":89,"line_end":89,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":14312,"byte_end":14317,"line_start":154,"line_end":154,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":15609,"byte_end":15617,"line_start":186,"line_end":186,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16840,"byte_end":16841,"line_start":235,"line_end":235,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19296,"byte_end":19297,"line_start":318,"line_end":318,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19523,"byte_end":19524,"line_start":323,"line_end":323,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19747,"byte_end":19748,"line_start":328,"line_end":328,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20064,"byte_end":20067,"line_start":337,"line_end":337,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20114,"byte_end":20117,"line_start":338,"line_end":338,"column_start":41,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20158,"byte_end":20161,"line_start":339,"line_end":339,"column_start":35,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20207,"byte_end":20208,"line_start":340,"line_end":340,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20378,"byte_end":20379,"line_start":345,"line_end":345,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20460,"byte_end":20461,"line_start":347,"line_end":347,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20647,"byte_end":20648,"line_start":352,"line_end":352,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20705,"byte_end":20708,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20773,"byte_end":20776,"line_start":355,"line_end":355,"column_start":55,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20835,"byte_end":20838,"line_start":356,"line_end":356,"column_start":49,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20906,"byte_end":20907,"line_start":357,"line_end":357,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21053,"byte_end":21056,"line_start":363,"line_end":363,"column_start":40,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21104,"byte_end":21107,"line_start":364,"line_end":364,"column_start":42,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21149,"byte_end":21152,"line_start":365,"line_end":365,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21199,"byte_end":21200,"line_start":366,"line_end":366,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21244,"byte_end":21246,"line_start":368,"line_end":368,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21294,"byte_end":21296,"line_start":369,"line_end":369,"column_start":42,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21338,"byte_end":21340,"line_start":370,"line_end":370,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21386,"byte_end":21387,"line_start":371,"line_end":371,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21420,"byte_end":21426,"line_start":373,"line_end":373,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21451,"byte_end":21457,"line_start":374,"line_end":374,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21488,"byte_end":21494,"line_start":375,"line_end":375,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21560,"byte_end":21561,"line_start":379,"line_end":379,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22203,"byte_end":22206,"line_start":407,"line_end":407,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22310,"byte_end":22313,"line_start":411,"line_end":411,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22417,"byte_end":22419,"line_start":415,"line_end":415,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22469,"byte_end":22470,"line_start":419,"line_end":419,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":24064,"byte_end":24070,"line_start":462,"line_end":462,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":24477,"byte_end":24483,"line_start":484,"line_end":484,"column_start":63,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":24616,"byte_end":24622,"line_start":492,"line_end":492,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25061,"byte_end":25071,"line_start":506,"line_end":506,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25184,"byte_end":25194,"line_start":512,"line_end":512,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25450,"byte_end":25460,"line_start":526,"line_end":526,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25481,"byte_end":25491,"line_start":528,"line_end":528,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25822,"byte_end":25828,"line_start":539,"line_end":539,"column_start":61,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25863,"byte_end":25869,"line_start":541,"line_end":541,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":26184,"byte_end":26190,"line_start":560,"line_end":560,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29573,"byte_end":29576,"line_start":665,"line_end":665,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29755,"byte_end":29766,"line_start":673,"line_end":673,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29793,"byte_end":29804,"line_start":675,"line_end":675,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29882,"byte_end":29893,"line_start":679,"line_end":679,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":30048,"byte_end":30054,"line_start":686,"line_end":686,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32454,"byte_end":32457,"line_start":773,"line_end":773,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32521,"byte_end":32524,"line_start":774,"line_end":774,"column_start":58,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32586,"byte_end":32589,"line_start":775,"line_end":775,"column_start":56,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32689,"byte_end":32692,"line_start":778,"line_end":778,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35654,"byte_end":35662,"line_start":876,"line_end":876,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35724,"byte_end":35732,"line_start":877,"line_end":877,"column_start":56,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35866,"byte_end":35874,"line_start":879,"line_end":879,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35943,"byte_end":35946,"line_start":880,"line_end":880,"column_start":63,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35981,"byte_end":35989,"line_start":882,"line_end":882,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":36756,"byte_end":36764,"line_start":914,"line_end":914,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":41512,"byte_end":41520,"line_start":1123,"line_end":1123,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":41749,"byte_end":41757,"line_start":1135,"line_end":1135,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":42045,"byte_end":42053,"line_start":1146,"line_end":1146,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":54491,"byte_end":54506,"line_start":25,"line_end":25,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":54966,"byte_end":54977,"line_start":49,"line_end":49,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55836,"byte_end":55843,"line_start":80,"line_end":80,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55930,"byte_end":55937,"line_start":84,"line_end":84,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56341,"byte_end":56348,"line_start":100,"line_end":100,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56417,"byte_end":56424,"line_start":105,"line_end":105,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56834,"byte_end":56844,"line_start":126,"line_end":126,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56940,"byte_end":56950,"line_start":132,"line_end":132,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":57423,"byte_end":57430,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58054,"byte_end":58064,"line_start":181,"line_end":181,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58151,"byte_end":58158,"line_start":185,"line_end":185,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58337,"byte_end":58344,"line_start":192,"line_end":192,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58578,"byte_end":58585,"line_start":199,"line_end":199,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58947,"byte_end":58948,"line_start":208,"line_end":208,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59464,"byte_end":59471,"line_start":222,"line_end":222,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59593,"byte_end":59594,"line_start":226,"line_end":226,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59772,"byte_end":59782,"line_start":233,"line_end":233,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59993,"byte_end":60003,"line_start":246,"line_end":246,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":60454,"byte_end":60461,"line_start":265,"line_end":265,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":60585,"byte_end":60595,"line_start":274,"line_end":274,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":61130,"byte_end":61137,"line_start":294,"line_end":294,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":61298,"byte_end":61308,"line_start":304,"line_end":304,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":61954,"byte_end":61961,"line_start":328,"line_end":328,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":62177,"byte_end":62187,"line_start":339,"line_end":339,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":63185,"byte_end":63192,"line_start":370,"line_end":370,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":63460,"byte_end":63470,"line_start":383,"line_end":383,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":64472,"byte_end":64479,"line_start":414,"line_end":414,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":64746,"byte_end":64753,"line_start":427,"line_end":427,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":65208,"byte_end":65215,"line_start":439,"line_end":439,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":65672,"byte_end":65679,"line_start":457,"line_end":457,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":66379,"byte_end":66386,"line_start":483,"line_end":483,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":67374,"byte_end":67381,"line_start":522,"line_end":522,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":68780,"byte_end":68787,"line_start":577,"line_end":577,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/joiner.rs","byte_start":80254,"byte_end":80255,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/keyedvec.rs","byte_start":81359,"byte_end":81360,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82662,"byte_end":82663,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85836,"byte_end":85854,"line_start":38,"line_end":38,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":86435,"byte_end":86436,"line_start":67,"line_end":67,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89626,"byte_end":89629,"line_start":63,"line_end":63,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":90235,"byte_end":90243,"line_start":86,"line_end":86,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98857,"byte_end":98860,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":99000,"byte_end":99003,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":99146,"byte_end":99149,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":99219,"byte_end":99222,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":11642,"byte_end":11647,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12130,"byte_end":12135,"line_start":76,"line_end":76,"column_start":28,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":743},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12277,"byte_end":12282,"line_start":83,"line_end":83,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":743},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":12361,"byte_end":12366,"line_start":89,"line_end":89,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":743},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":14312,"byte_end":14317,"line_start":154,"line_end":154,"column_start":31,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":743},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":15609,"byte_end":15617,"line_start":186,"line_end":186,"column_start":50,"column_end":58},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":52}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16342,"byte_end":16347,"line_start":212,"line_end":212,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":16840,"byte_end":16841,"line_start":235,"line_end":235,"column_start":36,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":18832,"byte_end":18837,"line_start":306,"line_end":306,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19242,"byte_end":19248,"line_start":317,"line_end":317,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":119},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19251,"byte_end":19257,"line_start":317,"line_end":317,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":107},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19296,"byte_end":19297,"line_start":318,"line_end":318,"column_start":36,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":125},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19456,"byte_end":19462,"line_start":322,"line_end":322,"column_start":23,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":107},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19465,"byte_end":19475,"line_start":322,"line_end":322,"column_start":32,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":684},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19523,"byte_end":19524,"line_start":323,"line_end":323,"column_start":45,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":128},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19681,"byte_end":19687,"line_start":327,"line_end":327,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":119},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19690,"byte_end":19700,"line_start":327,"line_end":327,"column_start":31,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":126},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":19747,"byte_end":19748,"line_start":328,"line_end":328,"column_start":44,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":131},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20016,"byte_end":20021,"line_start":335,"line_end":335,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2074},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20064,"byte_end":20067,"line_start":337,"line_end":337,"column_start":39,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20114,"byte_end":20117,"line_start":338,"line_end":338,"column_start":41,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20158,"byte_end":20161,"line_start":339,"line_end":339,"column_start":35,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20207,"byte_end":20208,"line_start":340,"line_end":340,"column_start":40,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20378,"byte_end":20379,"line_start":345,"line_end":345,"column_start":36,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":148},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20460,"byte_end":20461,"line_start":347,"line_end":347,"column_start":37,"column_end":38},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":152},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20647,"byte_end":20648,"line_start":352,"line_end":352,"column_start":40,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":160},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20705,"byte_end":20708,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":339},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20773,"byte_end":20776,"line_start":355,"line_end":355,"column_start":55,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":339},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20835,"byte_end":20838,"line_start":356,"line_end":356,"column_start":49,"column_end":52},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":339},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":20906,"byte_end":20907,"line_start":357,"line_end":357,"column_start":58,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":172},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21053,"byte_end":21056,"line_start":363,"line_end":363,"column_start":40,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21104,"byte_end":21107,"line_start":364,"line_end":364,"column_start":42,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21149,"byte_end":21152,"line_start":365,"line_end":365,"column_start":36,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21199,"byte_end":21200,"line_start":366,"line_end":366,"column_start":41,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":182},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21244,"byte_end":21246,"line_start":368,"line_end":368,"column_start":40,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":3023},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21294,"byte_end":21296,"line_start":369,"line_end":369,"column_start":42,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":3023},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21338,"byte_end":21340,"line_start":370,"line_end":370,"column_start":36,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":3023},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21386,"byte_end":21387,"line_start":371,"line_end":371,"column_start":40,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":190},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21420,"byte_end":21426,"line_start":373,"line_end":373,"column_start":29,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21451,"byte_end":21457,"line_start":374,"line_end":374,"column_start":22,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21488,"byte_end":21494,"line_start":375,"line_end":375,"column_start":28,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":21560,"byte_end":21561,"line_start":379,"line_end":379,"column_start":23,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22115,"byte_end":22120,"line_start":403,"line_end":403,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22203,"byte_end":22206,"line_start":407,"line_end":407,"column_start":31,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22310,"byte_end":22313,"line_start":411,"line_end":411,"column_start":31,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22417,"byte_end":22419,"line_start":415,"line_end":415,"column_start":31,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":5,"index":3023},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":22469,"byte_end":22470,"line_start":419,"line_end":419,"column_start":23,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":218},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":24064,"byte_end":24070,"line_start":462,"line_end":462,"column_start":39,"column_end":45},"kind":{"Impl":{"id":37}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":24477,"byte_end":24483,"line_start":484,"line_end":484,"column_start":63,"column_end":69},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":24616,"byte_end":24622,"line_start":492,"line_end":492,"column_start":39,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25061,"byte_end":25071,"line_start":506,"line_end":506,"column_start":27,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25184,"byte_end":25194,"line_start":512,"line_end":512,"column_start":17,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":757},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25450,"byte_end":25460,"line_start":526,"line_end":526,"column_start":21,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":757},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25481,"byte_end":25491,"line_start":528,"line_end":528,"column_start":17,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":757},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25822,"byte_end":25828,"line_start":539,"line_end":539,"column_start":61,"column_end":67},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":29905},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":25863,"byte_end":25869,"line_start":541,"line_end":541,"column_start":28,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":2,"index":29905},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":26184,"byte_end":26190,"line_start":560,"line_end":560,"column_start":28,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":2,"index":29905},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29573,"byte_end":29576,"line_start":665,"line_end":665,"column_start":42,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":5,"index":339},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29755,"byte_end":29766,"line_start":673,"line_end":673,"column_start":24,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":2,"index":1921},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29793,"byte_end":29804,"line_start":675,"line_end":675,"column_start":20,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":2,"index":1921},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":29882,"byte_end":29893,"line_start":679,"line_end":679,"column_start":20,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":2,"index":1921},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":30048,"byte_end":30054,"line_start":686,"line_end":686,"column_start":17,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32454,"byte_end":32457,"line_start":773,"line_end":773,"column_start":31,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32521,"byte_end":32524,"line_start":774,"line_end":774,"column_start":58,"column_end":61},"kind":{"Impl":{"id":54}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32586,"byte_end":32589,"line_start":775,"line_end":775,"column_start":56,"column_end":59},"kind":{"Impl":{"id":55}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":32689,"byte_end":32692,"line_start":778,"line_end":778,"column_start":28,"column_end":31},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35654,"byte_end":35662,"line_start":876,"line_end":876,"column_start":32,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":2520},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35724,"byte_end":35732,"line_start":877,"line_end":877,"column_start":56,"column_end":64},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":2520},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35866,"byte_end":35874,"line_start":879,"line_end":879,"column_start":58,"column_end":66},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":2520},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35943,"byte_end":35946,"line_start":880,"line_end":880,"column_start":63,"column_end":66},"kind":{"Impl":{"id":60}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":35981,"byte_end":35989,"line_start":882,"line_end":882,"column_start":28,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":5,"index":2520},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":36756,"byte_end":36764,"line_start":914,"line_end":914,"column_start":28,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":5,"index":2520},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":41512,"byte_end":41520,"line_start":1123,"line_end":1123,"column_start":17,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":2,"index":32371},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":41749,"byte_end":41757,"line_start":1135,"line_end":1135,"column_start":17,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":2,"index":32371},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/codec.rs","byte_start":42045,"byte_end":42053,"line_start":1146,"line_end":1146,"column_start":21,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":2,"index":32371},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":54491,"byte_end":54506,"line_start":25,"line_end":25,"column_start":46,"column_end":61},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":54966,"byte_end":54977,"line_start":49,"line_end":49,"column_start":35,"column_end":46},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":398},"to":{"krate":0,"index":52}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55836,"byte_end":55843,"line_start":80,"line_end":80,"column_start":21,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":55930,"byte_end":55937,"line_start":84,"line_end":84,"column_start":35,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56064,"byte_end":56068,"line_start":89,"line_end":89,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1823},"to":{"krate":0,"index":418}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56341,"byte_end":56348,"line_start":100,"line_end":100,"column_start":24,"column_end":31},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56417,"byte_end":56424,"line_start":105,"line_end":105,"column_start":20,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56834,"byte_end":56844,"line_start":126,"line_end":126,"column_start":28,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":56940,"byte_end":56950,"line_start":132,"line_end":132,"column_start":24,"column_end":34},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":57423,"byte_end":57430,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58054,"byte_end":58064,"line_start":181,"line_end":181,"column_start":29,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6388},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58151,"byte_end":58158,"line_start":185,"line_end":185,"column_start":30,"column_end":37},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58337,"byte_end":58344,"line_start":192,"line_end":192,"column_start":30,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6346},"to":{"krate":17,"index":1680}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58578,"byte_end":58585,"line_start":199,"line_end":199,"column_start":42,"column_end":49},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6346},"to":{"krate":17,"index":1192}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58834,"byte_end":58839,"line_start":206,"line_end":206,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":6176},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58849,"byte_end":58858,"line_start":206,"line_end":206,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":17,"index":1680},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58876,"byte_end":58887,"line_start":206,"line_end":206,"column_start":81,"column_end":92},"kind":"SuperTrait","from":{"krate":17,"index":1192},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":58947,"byte_end":58948,"line_start":208,"line_end":208,"column_start":29,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":475},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59256,"byte_end":59261,"line_start":216,"line_end":216,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":477}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59464,"byte_end":59471,"line_start":222,"line_end":222,"column_start":40,"column_end":47},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":222}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59593,"byte_end":59594,"line_start":226,"line_end":226,"column_start":33,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":477}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59772,"byte_end":59782,"line_start":233,"line_end":233,"column_start":21,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":59993,"byte_end":60003,"line_start":246,"line_end":246,"column_start":21,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":60454,"byte_end":60461,"line_start":265,"line_end":265,"column_start":25,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":60585,"byte_end":60595,"line_start":274,"line_end":274,"column_start":21,"column_end":31},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":61130,"byte_end":61137,"line_start":294,"line_end":294,"column_start":26,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":61298,"byte_end":61308,"line_start":304,"line_end":304,"column_start":21,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":61954,"byte_end":61961,"line_start":328,"line_end":328,"column_start":26,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":62177,"byte_end":62187,"line_start":339,"line_end":339,"column_start":21,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":63185,"byte_end":63192,"line_start":370,"line_end":370,"column_start":26,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":63460,"byte_end":63470,"line_start":383,"line_end":383,"column_start":21,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":64472,"byte_end":64479,"line_start":414,"line_end":414,"column_start":27,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":64746,"byte_end":64753,"line_start":427,"line_end":427,"column_start":17,"column_end":24},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":65208,"byte_end":65215,"line_start":439,"line_end":439,"column_start":17,"column_end":24},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":65672,"byte_end":65679,"line_start":457,"line_end":457,"column_start":17,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":66379,"byte_end":66386,"line_start":483,"line_end":483,"column_start":17,"column_end":24},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":67374,"byte_end":67381,"line_start":522,"line_end":522,"column_start":17,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/compact.rs","byte_start":68780,"byte_end":68787,"line_start":577,"line_end":577,"column_start":17,"column_end":24},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6346},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/joiner.rs","byte_start":80254,"byte_end":80255,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":581},"to":{"krate":0,"index":577}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/keyedvec.rs","byte_start":81359,"byte_end":81360,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":593},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82452,"byte_end":82457,"line_start":22,"line_end":22,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":601}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/decode_all.rs","byte_start":82662,"byte_end":82663,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":604},"to":{"krate":0,"index":601}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85360,"byte_end":85365,"line_start":22,"line_end":22,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":612}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":85836,"byte_end":85854,"line_start":38,"line_end":38,"column_start":29,"column_end":47},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":615},"to":{"krate":0,"index":52}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/depth_limit.rs","byte_start":86435,"byte_end":86436,"line_start":67,"line_end":67,"column_start":33,"column_end":34},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":630},"to":{"krate":0,"index":612}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":89626,"byte_end":89629,"line_start":63,"line_end":63,"column_start":34,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":646}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_append.rs","byte_start":90235,"byte_end":90243,"line_start":86,"line_end":86,"column_start":61,"column_end":69},"kind":{"Impl":{"id":143}},"from":{"krate":5,"index":2520},"to":{"krate":0,"index":646}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98306,"byte_end":98311,"line_start":73,"line_end":73,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98314,"byte_end":98320,"line_start":73,"line_end":73,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":107},"to":{"krate":0,"index":684}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":98857,"byte_end":98860,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":99000,"byte_end":99003,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":99146,"byte_end":99149,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/leon/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-1.3.4/src/encode_like.rs","byte_start":99219,"byte_end":99222,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":684}}]}